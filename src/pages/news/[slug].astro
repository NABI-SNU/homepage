---
import { getCollection, render, type CollectionEntry } from 'astro:content';
import Layout from '~/layouts/PageLayout.astro';
import SingleMonth from '~/components/news/SingleMonth.svelte';

export async function getStaticPaths() {
  const entries = (await getCollection('news')) as CollectionEntry<'news'>[];
  return entries.map((entry) => ({
    params: {
      slug:
        entry.id
          .split('/')
          .pop()
          ?.replace(/\.(md|mdx)$/, '') || '',
    },
    props: { id: entry.id },  
  }));
}

const { id } = Astro.props as { id: string };
const entry = ((await getCollection('news')) as CollectionEntry<'news'>[]).find(
  (e) => e.id === id
) as CollectionEntry<'news'>;

const { Content } = await render(entry);

const metadata = {
  title: entry.data.title,
  description: entry.data.description,
};
---

<Layout metadata={metadata}>
  <pagefind-main>
    <SingleMonth news={{
      id: entry.id,
      slug: entry.id.split('/').pop()?.replace(/\.(md|mdx)$/, '') || '',
      permalink: Astro.url.pathname,
      publishDate: new Date(entry.data.date || ''),
      title: entry.data.title,
      image: entry.data.image,
      excerpt: entry.data.description,
    }} url={Astro.url}>
      
      <Content />
    </SingleMonth>
  </pagefind-main>
</Layout>
